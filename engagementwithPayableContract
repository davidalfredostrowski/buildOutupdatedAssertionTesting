--> contracts/ExamplePayableContract.sol


Compiled 1 Solidity file successfully (evm target: paris).
Welcome to Node.js v18.19.1.
Type ".help" for more information.
> const signers = await ethers.getSigners();
undefined
> signers
[
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0x70997970C51812dc3A010C7d01b50e0d17dc79C8',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0x90F79bf6EB2c4f870365E785982E1f101E93b906',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0x976EA74026E726554dB657fA54763abd0C3a0aa9',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0x14dC79964da2C08b23698B3D3cc7Ca32193d9955',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0xa0Ee7A142d267C1f36714E4a8F75612F20a79720',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0xBcd4042DE499D14e55001CcbB24a551F3b954096',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0x71bE63f3384f5fb98995898A86B02Fb2426c5788',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0xFABB0ac9d68B0B445fB7357272Ff202C5651694a',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0x1CBd3b2770909D4e10f157cABC84C7264073C9Ec',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0xdF3e18d64BC6A983f673Ab319CCaE4f1a57C7097',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0xcd3B766CCDd6AE721141F452C550Ca635964ce71',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0x2546BcD3c84621e976D8185a91A922aE77ECEc30',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0xbDA5747bFD65F08deb54cb465eB87D40e51B197E',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0xdD2FD4581271e230360230F9337D5c0430Bf44C0',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  }
]
> const signers = await ethers.getSigners();
Uncaught SyntaxError: Identifier 'signers' has already been declared
>  const contract =  await ethers.getContractFactory("ExamplePayableContract")
undefined
> const cd = await contract.deploy()
undefined
> cd
BaseContract {
  target: '0x5FbDB2315678afecb367f032d93F642f64180aa3',
  interface: Interface {
    fragments: [
      [EventFragment],
      [EventFragment],
      [FunctionFragment],
      [FunctionFragment]
    ],
    deploy: ConstructorFragment {
      type: 'constructor',
      inputs: [],
      payable: false,
      gas: null
    },
    fallback: null,
    receive: false
  },
  runner: HardhatEthersSigner {
    _gasLimit: 30000000,
    address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
    provider: HardhatEthersProvider {
      _hardhatProvider: [LazyInitializationProviderAdapter],
      _networkName: 'localhost',
      _blockListeners: [],
      _transactionHashListeners: Map(0) {},
      _eventListeners: []
    }
  },
  filters: {},
  fallback: null,
  [Symbol(_ethersInternal_contract)]: {}
}
> cd.address
undefined
> cd.target
'0x5FbDB2315678afecb367f032d93F642f64180aa3'
> const bal2 = await ethers.provider.getBalance(cd.target)
undefined
> bal2
0n
> const [deployer] - await ethers.getSigners();
const [deployer] - await ethers.getSigners();
      ^^^^^^^^^^

Uncaught SyntaxError: Missing initializer in destructuring declaration
> const [deployer] = await ethers.getSigners();
undefined
> deployer
HardhatEthersSigner {
  _gasLimit: 30000000,
  address: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
  provider: HardhatEthersProvider {
    _hardhatProvider: LazyInitializationProviderAdapter {
      _providerFactory: [AsyncFunction (anonymous)],
      _emitter: [EventEmitter],
      _initializingPromise: [Promise],
      provider: [BackwardsCompatibilityProviderAdapter]
    },
    _networkName: 'localhost',
    _blockListeners: [],
    _transactionHashListeners: Map(0) {},
    _eventListeners: []
  }
}
> cd.address
undefined
>   await deployer.sendTransaction({  to: contract.target,  value: amountToSend  });
Uncaught ReferenceError: amountToSend is not defined
    at REPL79:1:98
> const amountToSend = ethers.utils.parseEther("1.0"); // 1 ETHers
Uncaught TypeError: Cannot read properties of undefined (reading 'parseEther')
> const amountToSend = ethers.parseEther("1.0"); // 1 ETHers
Uncaught SyntaxError: Identifier 'amountToSend' has already been declared
> const amountToSend2 = ethers.parseEther("1.0"); // 1 ETHers
undefined
> amountToSend2
1000000000000000000n
>
 













 await deployer.sendTransaction({  to: contract.target,  value: amountToSend  });
